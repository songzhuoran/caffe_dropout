name: "VGG_ILSVRC_16_layers"
layer {
  name: "data"
  type: "Data"
  include {
    phase: TRAIN
  }
  transform_param {
    mean_file: "/home/szr/caffe-ljw/examples/cifar10/mean.binaryproto"
  }
  data_param {
    source: "/home/szr/caffe-ljw/examples/cifar10/cifar10_train_lmdb"
    batch_size: 50
    backend: LMDB
  }
  top: "data"
  top: "label"
}
layer {
  name: "data"
  type: "Data"
  include {
    phase: TEST
  }
  transform_param {
    mean_file: "/home/szr/caffe-ljw/examples/cifar10/mean.binaryproto"
  }
  data_param {
    source: "/home/szr/caffe-ljw/examples/cifar10/cifar10_test_lmdb"
    batch_size: 10
    backend: LMDB
  }
  top: "data"
  top: "label"
}
layer {
  bottom: "data"
  top: "conv1_1"
  name: "conv1_1"
  type: "Convolution"
  convolution_param {
    num_output: 64
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
  param {
    lr_mult: 1
    decay_mult :1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
}
layer { 
 name: "bn1_1" 
 type: "BatchNorm" 
 bottom: "conv1_1" 
 top: "conv1_1" 
 batch_norm_param { 
 use_global_stats: false 
 }
} 
 layer { 
 bottom: "conv1_1" 
 top: "conv1_1" 
 name: "scale_conv1_1" 
 type: "Scale" 
 scale_param { 
 bias_term: true 
 } 
}
layer {
  bottom: "conv1_1"
  top: "conv1_1"
  name: "relu1_1"
  type: "ReLU"
}
layer {
  bottom: "conv1_1"
  top: "pool1"
  name: "pool1"
  type: "Pooling"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  bottom: "pool1"
  top: "conv2_1"
  name: "conv2_1"
  type: "Convolution"
  convolution_param {
    num_output: 128
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
}
layer { 
 name: "bn2_1" 
 type: "BatchNorm" 
 bottom: "conv2_1" 
 top: "conv2_1" 
 batch_norm_param { 
 use_global_stats: false 
 }
} 
 layer { 
 bottom: "conv2_1" 
 top: "conv2_1" 
 name: "scale_conv2_1" 
 type: "Scale" 
 scale_param { 
 bias_term: true 
 } 
}
layer {
  bottom: "conv2_1"
  top: "conv2_1"
  name: "relu2_1"
  type: "ReLU"
}
layer {
  bottom: "conv2_1"
  top: "pool2"
  name: "pool2"
  type: "Pooling"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  bottom: "pool2"
  top: "conv3_1"
  name: "conv3_1"
  type: "Convolution"
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
  param {
    lr_mult: 1
    decay_mult :1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
}
layer { 
 name: "bn3_1" 
 type: "BatchNorm" 
 bottom: "conv3_1" 
 top: "conv3_1" 
 batch_norm_param { 
 use_global_stats: false 
 }
} 
 layer { 
 bottom: "conv3_1" 
 top: "conv3_1" 
 name: "scale_conv3_1" 
 type: "Scale" 
 scale_param { 
 bias_term: true 
 } 
}
layer {
  bottom: "conv3_1"
  top: "conv3_1"
  name: "relu3_1"
  type: "ReLU"
}
layer {
  bottom: "conv3_1"
  top: "conv3_2"
  name: "conv3_2"
  type: "Convolution"
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
  param {
    lr_mult: 1
    decay_mult :1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
}
layer { 
 name: "bn3_2" 
 type: "BatchNorm" 
 bottom: "conv3_2" 
 top: "conv3_2" 
 batch_norm_param { 
 use_global_stats: false 
 }
} 
 layer { 
 bottom: "conv3_2" 
 top: "conv3_2" 
 name: "scale_conv3_2" 
 type: "Scale" 
 scale_param { 
 bias_term: true 
 } 
}
layer {
  bottom: "conv3_2"
  top: "conv3_2"
  name: "relu3_2"
  type: "ReLU"
}
layer {
  bottom: "conv3_2"
  top: "pool3"
  name: "pool3"
  type: "Pooling"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  bottom: "pool3"
  top: "conv4_1"
  name: "conv4_1"
  type: "Convolution"
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
  param {
    lr_mult: 1
    decay_mult :1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
}
layer { 
 name: "bn4_1" 
 type: "BatchNorm" 
 bottom: "conv4_1" 
 top: "conv4_1" 
 batch_norm_param { 
 use_global_stats: false 
 }
} 
 layer { 
 bottom: "conv4_1" 
 top: "conv4_1" 
 name: "scale_conv4_1" 
 type: "Scale" 
 scale_param { 
 bias_term: true 
 } 
}
layer {
  bottom: "conv4_1"
  top: "conv4_1"
  name: "relu4_1"
  type: "ReLU"
}
layer {
  bottom: "conv4_1"
  top: "conv4_2"
  name: "conv4_2"
  type: "Convolution"
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
  param {
    lr_mult: 1
    decay_mult :1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
}
layer { 
 name: "bn4_2" 
 type: "BatchNorm" 
 bottom: "conv4_2" 
 top: "conv4_2" 
 batch_norm_param { 
 use_global_stats: false 
 }
} 
 layer { 
 bottom: "conv4_2" 
 top: "conv4_2" 
 name: "scale_conv4_2" 
 type: "Scale" 
 scale_param { 
 bias_term: true 
 } 
}
layer {
  bottom: "conv4_2"
  top: "conv4_2"
  name: "relu4_2"
  type: "ReLU"
}
layer {
  bottom: "conv4_2"
  top: "pool4"
  name: "pool4"
  type: "Pooling"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  bottom: "pool4"
  top: "conv5_1"
  name: "conv5_1"
  type: "Convolution"
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
  param {
    lr_mult: 1
    decay_mult :1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
}
layer { 
 name: "bn5_1" 
 type: "BatchNorm" 
 bottom: "conv5_1" 
 top: "conv5_1" 
 batch_norm_param { 
 use_global_stats: false 
 }
} 
layer { 
 bottom: "conv5_1" 
 top: "conv5_1" 
 name: "scale_conv5_1" 
 type: "Scale" 
 scale_param { 
 bias_term: true 
 } 
}
layer {
  bottom: "conv5_1"
  top: "conv5_1"
  name: "relu5_1"
  type: "ReLU"
}
layer {
  bottom: "conv5_1"
  top: "conv5_2"
  name: "conv5_2"
  type: "Convolution"
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
  param {
    lr_mult: 1
    decay_mult :1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
}
layer { 
 name: "bn5_2" 
 type: "BatchNorm" 
 bottom: "conv5_2" 
 top: "conv5_2" 
 batch_norm_param { 
 use_global_stats: false 
 }
} 
layer { 
 bottom: "conv5_2" 
 top: "conv5_2" 
 name: "scale_conv5_2" 
 type: "Scale" 
 scale_param { 
 bias_term: true 
 } 
}
layer {
  bottom: "conv5_2"
  top: "conv5_2"
  name: "relu5_2"
  type: "ReLU"
}
layer {
  bottom: "conv5_2"
  top: "pool5"
  name: "pool5"
  type: "Pooling"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  bottom: "pool5"
  top: "fc6"
  name: "fc6"
  type: "InnerProduct"
  inner_product_param {
    num_output: 4096
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
  param {
    lr_mult: 1
    decay_mult :1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
}
layer {
  bottom: "fc6"
  top: "fc6"
  name: "relu6"
  type: "ReLU"
}
layer {
  bottom: "fc6"
  top: "fc6"
  name: "drop6"
  type: "Dropout"
  dropout_param {
    dropout_ratio: 0.5
  }
}
layer {
  bottom: "fc6"
  top: "fc7"
  name: "fc7"
  type: "InnerProduct"
  inner_product_param {
    num_output: 4096
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
  param {
    lr_mult: 1
    decay_mult :1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
}
layer {
  bottom: "fc7"
  top: "fc7"
  name: "relu7"
  type: "ReLU"
}
layer {
  bottom: "fc7"
  top: "fc7"
  name: "drop7"
  type: "Dropout"
  dropout_param {
    dropout_ratio: 0.5
  }
}
layer {
  name: "fc8"
  bottom: "fc7"
  top: "fc8"
  type: "InnerProduct"
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
  param {
    lr_mult: 1
    decay_mult :1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "fc8"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "fc8"
  bottom: "label"
  top: "loss"
}
